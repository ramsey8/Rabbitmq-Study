<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd" >

    <description>rabbitmq 连接服务配置</description>

    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}"  virtual-host="${mq.vhost}"/>
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- spring template声明-->
    <rabbit:template exchange="koms" id="amqpTemplate"  connection-factory="connectionFactory"  message-converter="jsonMessageConverter" />

    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
    <!--
        durable:是否持久化

        exclusive: 仅创建者可以使用的私有队列，断开后自动删除

        auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
     -->

    <!--  申明一个消息队列Queue   -->
    <rabbit:queue id="queue_trade_repay" name="queue_trade_repay" durable="true" auto-delete="false" exclusive="false" />
    <!-- 交换机定义 -->
    <rabbit:direct-exchange name="koms" durable="true" auto-delete="false" id="koms">
        <rabbit:bindings>
            <rabbit:binding queue="queue_trade_repay" key="queue_trade_repay"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--
         queues：监听的队列，多个的话用逗号（,）分隔
        ref：监听器
     -->
    <!-- 配置监听  acknowledeg = "manual"   设置手动应答  当消息处理失败时:会一直重发  直到消息处理成功 -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual" concurrency="4" message-converter="jsonMessageConverter">
        <!-- 配置监听器 -->
        <rabbit:listener queues="queue_trade_repay" ref="tradeListener"/>
        <rabbit:listener queues="queue_trade_repay" ref="tradeListener"/>
    </rabbit:listener-container>
</beans>